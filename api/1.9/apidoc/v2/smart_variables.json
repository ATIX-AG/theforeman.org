{"docs":{"name":"Foreman","info":"\n\u003Cp\u003EForeman API v2 is currently the default API version.\u003C/p\u003E\n","copyright":"","doc_url":"../../apidoc/v2","api_url":"/api","resources":[{"doc_url":"../../apidoc/v2/smart_variables","api_url":"/api","name":"Smart variables","short_description":null,"full_description":null,"version":"v2","formats":null,"metadata":null,"methods":[{"doc_url":"../../apidoc/v2/smart_variables/index","name":"index","apis":[{"api_url":"/api/smart_variables","http_method":"GET","short_description":"List all smart variables","deprecated":null},{"api_url":"/api/hosts/:host_id/smart_variables","http_method":"GET","short_description":"List of smart variables for a specific host","deprecated":null},{"api_url":"/api/hostgroups/:hostgroup_id/smart_variables","http_method":"GET","short_description":"List of smart variables for a specific host group","deprecated":null},{"api_url":"/api/puppetclasses/:puppetclass_id/smart_variables","http_method":"GET","short_description":"List of smart variables for a specific Puppet class","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"host_id","full_name":"host_id","description":"","required":false,"allow_nil":false,"validator":"Must be an identifier, string from 1 to 128 characters containing only alphanumeric characters, space, underscore(_), hypen(-) with no leading or trailing space.","expected_type":"string","metadata":null,"show":true},{"name":"hostgroup_id","full_name":"hostgroup_id","description":"","required":false,"allow_nil":false,"validator":"Must be an identifier, string from 1 to 128 characters containing only alphanumeric characters, space, underscore(_), hypen(-) with no leading or trailing space.","expected_type":"string","metadata":null,"show":true},{"name":"puppetclass_id","full_name":"puppetclass_id","description":"","required":false,"allow_nil":false,"validator":"Must be an identifier, string from 1 to 128 characters containing only alphanumeric characters, space, underscore(_), hypen(-) with no leading or trailing space.","expected_type":"string","metadata":null,"show":true},{"name":"search","full_name":"search","description":"\n\u003Cp\u003Efilter results\u003C/p\u003E\n","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"order","full_name":"order","description":"\n\u003Cp\u003Esort results\u003C/p\u003E\n","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"page","full_name":"page","description":"\n\u003Cp\u003Epaginate results\u003C/p\u003E\n","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"per_page","full_name":"per_page","description":"\n\u003Cp\u003Enumber of entries per request\u003C/p\u003E\n","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true}],"examples":[],"metadata":null,"see":[]},{"doc_url":"../../apidoc/v2/smart_variables/show","name":"show","apis":[{"api_url":"/api/smart_variables/:id","http_method":"GET","short_description":"Show a smart variable","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"id","full_name":"id","description":"","required":true,"allow_nil":false,"validator":"Must be an identifier, string from 1 to 128 characters containing only alphanumeric characters, space, underscore(_), hypen(-) with no leading or trailing space.","expected_type":"string","metadata":null,"show":true}],"examples":[],"metadata":null,"see":[]},{"doc_url":"../../apidoc/v2/smart_variables/create","name":"create","apis":[{"api_url":"/api/smart_variables","http_method":"POST","short_description":"Create a smart variable","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"smart_variable","full_name":"smart_variable","description":"","required":true,"allow_nil":false,"validator":"Must be a Hash","expected_type":"hash","metadata":null,"show":true,"params":[{"name":"variable","full_name":"smart_variable[variable]","description":"\n\u003Cp\u003EName of variable\u003C/p\u003E\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"puppetclass_id","full_name":"smart_variable[puppetclass_id]","description":"\n\u003Cp\u003EPuppet class ID\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be a number.","expected_type":"string","metadata":null,"show":true},{"name":"default_value","full_name":"smart_variable[default_value]","description":"\n\u003Cp\u003EDefault value of variable\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"override_value_order","full_name":"smart_variable[override_value_order]","description":"\n\u003Cp\u003E\u89e3\u6790\u6570\u503c\u7684\u6307\u4ee4\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"description","full_name":"smart_variable[description]","description":"\n\u003Cp\u003EDescription of variable\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"validator_type","full_name":"smart_variable[validator_type]","description":"\n\u003Cp\u003ETypes of validation values\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be one of: regexp, list.","expected_type":"string","metadata":null,"show":true},{"name":"validator_rule","full_name":"smart_variable[validator_rule]","description":"\n\u003Cp\u003EUsed to enforce certain values for the parameter values\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"variable_type","full_name":"smart_variable[variable_type]","description":"\n\u003Cp\u003ETypes of variable values\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be one of: string, boolean, integer, real, array, hash, yaml, json.","expected_type":"string","metadata":null,"show":true},{"name":"merge_overrides","full_name":"smart_variable[merge_overrides]","description":"\n\u003Cp\u003EMerge all matching values (only array/hash type)\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be 'true' or 'false'","expected_type":"string","metadata":null,"show":true},{"name":"avoid_duplicates","full_name":"smart_variable[avoid_duplicates]","description":"\n\u003Cp\u003ERemove duplicate values (only array type)\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be 'true' or 'false'","expected_type":"string","metadata":null,"show":true}]}],"examples":[],"metadata":null,"see":[]},{"doc_url":"../../apidoc/v2/smart_variables/update","name":"update","apis":[{"api_url":"/api/smart_variables/:id","http_method":"PUT","short_description":"Update a smart variable","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"id","full_name":"id","description":"","required":true,"allow_nil":false,"validator":"Must be an identifier, string from 1 to 128 characters containing only alphanumeric characters, space, underscore(_), hypen(-) with no leading or trailing space.","expected_type":"string","metadata":null,"show":true},{"name":"smart_variable","full_name":"smart_variable","description":"","required":true,"allow_nil":false,"validator":"Must be a Hash","expected_type":"hash","metadata":null,"show":true,"params":[{"name":"variable","full_name":"smart_variable[variable]","description":"\n\u003Cp\u003EName of variable\u003C/p\u003E\n","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"puppetclass_id","full_name":"smart_variable[puppetclass_id]","description":"\n\u003Cp\u003EPuppet class ID\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be a number.","expected_type":"string","metadata":null,"show":true},{"name":"default_value","full_name":"smart_variable[default_value]","description":"\n\u003Cp\u003EDefault value of variable\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"override_value_order","full_name":"smart_variable[override_value_order]","description":"\n\u003Cp\u003E\u89e3\u6790\u6570\u503c\u7684\u6307\u4ee4\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"description","full_name":"smart_variable[description]","description":"\n\u003Cp\u003EDescription of variable\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"validator_type","full_name":"smart_variable[validator_type]","description":"\n\u003Cp\u003ETypes of validation values\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be one of: regexp, list.","expected_type":"string","metadata":null,"show":true},{"name":"validator_rule","full_name":"smart_variable[validator_rule]","description":"\n\u003Cp\u003EUsed to enforce certain values for the parameter values\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"variable_type","full_name":"smart_variable[variable_type]","description":"\n\u003Cp\u003ETypes of variable values\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be one of: string, boolean, integer, real, array, hash, yaml, json.","expected_type":"string","metadata":null,"show":true},{"name":"merge_overrides","full_name":"smart_variable[merge_overrides]","description":"\n\u003Cp\u003EMerge all matching values (only array/hash type)\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be 'true' or 'false'","expected_type":"string","metadata":null,"show":true},{"name":"avoid_duplicates","full_name":"smart_variable[avoid_duplicates]","description":"\n\u003Cp\u003ERemove duplicate values (only array type)\u003C/p\u003E\n","required":false,"allow_nil":true,"validator":"Must be 'true' or 'false'","expected_type":"string","metadata":null,"show":true}]}],"examples":[],"metadata":null,"see":[]},{"doc_url":"../../apidoc/v2/smart_variables/destroy","name":"destroy","apis":[{"api_url":"/api/smart_variables/:id","http_method":"DELETE","short_description":"Delete a smart variable","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"id","full_name":"id","description":"","required":true,"allow_nil":false,"validator":"Must be an identifier, string from 1 to 128 characters containing only alphanumeric characters, space, underscore(_), hypen(-) with no leading or trailing space.","expected_type":"string","metadata":null,"show":true}],"examples":[],"metadata":null,"see":[]}]}],"link_extension":".html"}}